""""
3. Вводиться два числа (a та b). В даному інтервалі потрібно вивести число, яке має найбільше дільників.
Тобто, якщо а=10, b=20, то потрібно перевірити числа 11, 12, 13…. 20, і вивести на екран таке число,
яке має найбільше дільників, тобто частка при діленні рівна 0.
В наведеному прикладі вище потрібно вивести на екран число “18”,
оскільки воно має найбільше дільників (1, 2, 3, 6, 9, 18) і є максимальним.
"""

try:
    print ("Число a має бути меншим за число b")
    a= int (input("\n ВВедіть перше число (а) інтервалу:  "))
    b = int(input("ВВедіть друге число (b) інтервалу:  "))
    if a>b:
        print ("Число a > b. ПРОГРАМА НЕ ПРАЦЮЄ. Введіть числа, щоб виконалась умова a < b  ")
        exit()
except ValueError:
    print ("ВВедіть коректно числа a чи b або обидва ")

"створюється масив з чисел інтервалу a та b"
arr_inter = [a]  # створюється масив з першим елементом значенням - а
n_e_interv = b-a +1  # кількість елементів в проміжку включно з a та b
if b-a == 0:
    print("Різниця чсел a та b рівна нулю '0'. Розрахунок неможливий.")
    exit()

    "цикл, що створює масив з чисел інтервалу включно з a та b -  "
for i in range (n_e_interv-1):  # -1, бо один елемент в масиві вже є і  це значення 'а'
    c= arr_inter[i]+1  #  значення наступного елемента
    arr_inter.append(c)  #  створення масиву

"цикл створення масивів дільників кожного числа з проміжку a:b"
arr_d =[]  # масив масивів дільників (arr_d_numb) усіх чисел з інтервалу a:b

for j in range (n_e_interv):  # беремо число з масиву arr_inter (масив з числами з інтервалу a:b)
    #print (" Елемент масиву %s" % arr_inter[j])
    arr_d_numb = []  # порожній масив дільників числа

    for n in range(b+1):  #  беремо самого дільника +1 щоб охватити всі
        if n==0:
           continue  # повертається на початок циклу for n in.....
        elif arr_inter[j]%n == 0:# якщо елемент масиву ділиться без остачі,то
            arr_d_numb.append(n)  # створюється масив дільників числа масиву arr_inter
    arr_d.append(arr_d_numb)  # створюється масив масивів дільників (arr_d_numb) усіх чисел з інтервалу a:b

"Визначаємо найбільшу кількість дільників для числа"
kilkist_dil =[]  # масив для кількості дільників для кожного елементу Інтервалу a:b
max = 0
for i in range (n_e_interv):
    kilkist_dil.append(len (arr_d[i]))  #  масив для кількості дільників для кожного елементу Інтервалу a:b
    if kilkist_dil[i]>max:  #  якщо максимальне число з масиву більше як max, то
        max = kilkist_dil[i] # max присвоюється це число

m_Kil_dil = []  # масив з масивами найбільшої кількості дільників
m_NumInter = []  # масив з числами з Інтервалу, що мають найбільше дільників

for i in range(n_e_interv):
    if len (arr_d[i])==max:
        m_Kil_dil.append(arr_d[i])  # масив з максимальною кількість дільників елементу
        m_NumInter.append(arr_inter[i])  # масив з числами з Інтервалу, що мають найбільше дільників
#print ("\n Інтервал чисел %s" % arr_inter)  #
#print ("\n Перелік дільників до Інтервалу чисел %s"%arr_d)  #
# print ("\n Максимальна кількість дільників для числа Інтервалу %s" % max_Kilk_dil)  #
print (" \n З Інтервалу числа(о) --- %s ---  має(ють) такі дільники відповідно \n --- %s ---,\n "
       "що є найбільшою кількістю і становить ---%s---" %(m_NumInter,m_Kil_dil,max))


